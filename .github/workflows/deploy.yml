name: CI/CD Deploy Pipeline for Whisper Voice Auth Service

on:
  push:
    branches: [ main ]

jobs:
  debug:
    runs-on: ubuntu-latest
    steps:
      - name: Debug SSH connection manually
        run: |
          echo "$SSH_KEY" > /tmp/id_rsa
          chmod 600 /tmp/id_rsa

          echo "👉 Проверка доступности порта..."
          nc -zv $SSH_HOST $SSH_PORT || echo "❌ Не удалось подключиться к $SSH_HOST:$SSH_PORT"

          echo "👉 Проверка SSH-соединения..."
          ssh -i /tmp/id_rsa -p $SSH_PORT -o StrictHostKeyChecking=no -v $SSH_USER@$SSH_HOST 'echo ✅ Успешное подключение'
        env:
          SSH_KEY: ${{ secrets.SSH_KEY }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_PORT: ${{ secrets.SSH_PORT || 22 }}

  deploy:
    runs-on: ubuntu-latest
    needs: debug
    steps:
      - name: Deploy to Server via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT || '22' }}
          command_timeout: 10m
          script: |
            echo "🚀 Starting deployment to Whisper Voice Auth Service..."
            
            # Navigate to project directory
            cd ${{ secrets.PROJECT_PATH || '/home/deploy/whisper' }}
            
            # Pull latest code
            echo "📥 Pulling latest code..."
            git pull origin main
            
            # Pull and restart with docker-compose
            echo "🐳 Updating and restarting services..."
            docker-compose -f docker-compose.prod.yml pull
            docker-compose -f docker-compose.prod.yml up -d --remove-orphans --force-recreate
            
            # Wait for service to start
            echo "⏳ Waiting for service to start..."
            sleep 15
            
            # Health check
            echo "🏥 Performing health check..."
            if curl -f http://localhost:8000/health > /dev/null 2>&1; then
              echo "✅ Health check passed!"
            else
              echo "⚠️ Health check failed, but service might still be starting..."
              docker-compose -f docker-compose.prod.yml logs --tail=10 whisper-api
            fi
            
            # Cleanup old Docker images
            echo "🧹 Cleaning up old images..."
            docker image prune -f || echo "⚠️ Image cleanup failed"
            
            echo "🎉 Deployment completed!"
            echo "🌐 Service available at: http://$(hostname -I | cut -d' ' -f1):8000"

  notify:
    runs-on: ubuntu-latest
    needs: [debug, deploy]
    if: always()
    steps:
      - name: Notify deployment result
        run: |
          echo "📊 Pipeline Summary:"
          echo "  - Debug job: ${{ needs.debug.result }}"
          echo "  - Deploy job: ${{ needs.deploy.result }}"
          echo "  - Commit: ${{ github.sha }}"
          echo "  - Branch: ${{ github.ref_name }}"
          echo "  - Time: $(date)"
          
          if [ "${{ needs.debug.result }}" == "success" ] && [ "${{ needs.deploy.result }}" == "success" ]; then
            echo "✅ Whisper Voice Auth Service deployed successfully!"
          else
            echo "❌ Pipeline failed!"
            if [ "${{ needs.debug.result }}" != "success" ]; then
              echo "🔍 Debug job failed - check SSH connection"
            fi
            if [ "${{ needs.deploy.result }}" != "success" ]; then
              echo "🔍 Deploy job failed - check deployment logs"
            fi
            exit 1
          fi
